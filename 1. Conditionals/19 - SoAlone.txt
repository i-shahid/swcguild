We'll say that a number is "teen" if it is in the range 13..19 inclusive. Given 2 int values, return true if one or the other is teen, but not both. 

SoAlone(13, 99) -> true
SoAlone(21, 19) -> true
SoAlone(13, 13) -> false

public bool SoAlone(int a, int b) {

}

----------Solution----------

public bool SoAlone(int a, int b)
        {
            bool aTeen = a >= 13 && a <= 19;
            bool bTeen = b >= 13 && b <= 19;

            if (aTeen && !bTeen || !aTeen && bTeen)
            {
                return true;
            }
            return false;
        }

---testcase---

public void SoAlone(int a, int b, bool expected)
        {
            Conditionals obj = new Conditionals();
            bool actual = obj.SoAlone(a, b);
            Assert.AreEqual(expected, actual);
        }