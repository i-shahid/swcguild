We'll say that a number is "teen" if it is in the range 13..19 inclusive. Given 3 int values, return true if 1 or more of them are teen. 

HasTeen(13, 20, 10) -> true
HasTeen(20, 19, 10) -> true
HasTeen(20, 10, 12) -> false

public bool HasTeen(int a, int b, int c) {

}

----------Solution----------

public bool HasTeen(int a, int b , int c)
        {
            bool aTeen = a >= 13 && a <= 19;
            bool bTeen = b >= 13 && b <= 19;
            bool cTeen = c >= 13 && c <= 19;

            if (aTeen || bTeen || cTeen)
            {
                return true;
            }
            return false;
        }

---testcase---

[TestCase(13, 20, 10, true)]
        [TestCase(20, 19, 10, true)]
        [TestCase(20, 10, 12, false)]

        public void HasTeen(int a, int b, int c, bool expected)
        {
            Conditionals obj = new Conditionals();
            bool actual = obj.HasTeen(a, b, c);
            Assert.AreEqual(expected, actual);
        }