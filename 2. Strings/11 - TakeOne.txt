Given a string, return a string length 1 from its front, unless front is false, in which case return a string length 1 from its back. The string will be non-empty. 

TakeOne("Hello", true) -> "H"
TakeOne("Hello", false) -> "o"
TakeOne("oh", true) -> "o"

public string TakeOne(string str, bool fromFront) {

}

------------------solution------------------

        public string TakeOne(string str, bool fromFront)
        {
            if (fromFront == true)
            {
                return str.Substring(0, 1);

            }
            else
            {
                return str.Substring(str.Length - 1, 1);
            }

---

 	[TestCase("Hello", true, "H")]
        [TestCase("Hello", false, "o")]
        [TestCase("oh", true, "o")]

        public void TakeOne(string str, bool fromFront, string expected)
        {
            Strings obj = new Strings();
            string actual = obj.TakeOne(str, fromFront);
            Assert.AreEqual(expected, actual);
        }